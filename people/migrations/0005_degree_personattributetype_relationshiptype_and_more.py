# Generated by Django 5.2.3 on 2025-10-30 22:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('people', '0004_deathcause_person_date_of_death_person_is_deceased_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PersonAttributeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'ordering': ('order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='RelationshipType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True)),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'ordering': ('order', 'label'),
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='institutions', to='people.location')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PersonAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_attributes', to='people.person')),
                ('attribute_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attributes', to='people.personattributetype')),
            ],
            options={
                'ordering': ('attribute_type__order', 'attribute_type__name', 'order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='PersonDegree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_of_study', models.CharField(blank=True, max_length=150, null=True)),
                ('start_year', models.PositiveIntegerField(blank=True, null=True)),
                ('end_year', models.PositiveIntegerField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='people_with_degree', to='people.degree')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='person_degrees', to='people.institution')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_degrees', to='people.person')),
            ],
            options={
                'ordering': ('-end_year', '-start_year', 'degree__name'),
            },
        ),
        migrations.CreateModel(
            name='PersonAttributeAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency', models.CharField(blank=True, max_length=100, null=True)),
                ('started_on', models.DateField(blank=True, null=True)),
                ('ended_on', models.DateField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_assignments', to='people.personattribute')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute_assignments', to='people.person')),
            ],
            options={
                'ordering': ('-started_on', '-created_at'),
                'constraints': [models.UniqueConstraint(condition=models.Q(('ended_on__isnull', True)), fields=('person', 'attribute'), name='unique_active_attribute_per_person')],
            },
        ),
        migrations.CreateModel(
            name='PersonRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_on', models.DateField(blank=True, null=True)),
                ('ended_on', models.DateField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_as_partner', to='people.person')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_as_person', to='people.person')),
                ('relationship_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationships', to='people.relationshiptype')),
            ],
            options={
                'ordering': ('-started_on', '-created_at'),
                'constraints': [models.CheckConstraint(condition=models.Q(('person', models.F('partner')), _negated=True), name='prevent_self_relationship'), models.UniqueConstraint(condition=models.Q(('ended_on__isnull', True)), fields=('person', 'partner', 'relationship_type'), name='unique_active_relationship_pair')],
            },
        ),
    ]
